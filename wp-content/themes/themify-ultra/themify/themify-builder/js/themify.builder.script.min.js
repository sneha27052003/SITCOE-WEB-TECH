let ThemifyBuilderModuleJs;
((i, u, l, m, h) => {
    "use strict";
    ThemifyBuilderModuleJs = {
        isBpMobile: !u.is_builder_active && u.w < parseInt(h.breakpoints.tablet[1]),
        init() {
            if (this.jsUrl = u.builder_url + "js/modules/", this.cssUrl = u.builder_url + "css/modules/", h.addons = Object.assign(h.addons, {
                    bgzs: {
                        match: "[data-zoom-bg]",
                        js: "bgzoom_scroll"
                    },
                    bgzm: {
                        match: "[data-zooming-bg]",
                        js: "bgzoom"
                    },
                    fwv: {
                        match: "[data-tbfullwidthvideo]",
                        js: "fullwidthvideo"
                    },
                    bgs: {
                        selector: ":scope>.tb_slider",
                        js: "backgroundSlider"
                    },
                    rd: {
                        selector: ".module-text-more",
                        js: "readMore"
                    },
                    fr: {
                        match: ".tb_row_frame_wrap",
                        css: "frames"
                    },
                    bgz: {
                        match: ".themify-bg-zoom",
                        css: "bg-zoom-hover"
                    },
                    cover: {
                        selector: ".builder_row_cover",
                        css: "cover"
                    },
                    color: {
                        selector: ".ui",
                        css: "colors"
                    },
                    app: {
                        selector: ".embossed,.shadow,.gradient,.rounded,.glossy",
                        css: "appearance"
                    },
                    image_left: {
                        match: ".module-image.image-left",
                        css: "image_styles/left"
                    },
                    image_center: {
                        match: ".module-image.image-center",
                        css: "image_styles/center"
                    },
                    image_right: {
                        match: ".module-image.image-right",
                        css: "image_styles/right"
                    },
                    image_top: {
                        match: ".module-image.image-top",
                        css: "image_styles/top"
                    },
                    image_overlay: {
                        match: ".module-image.image-overlay",
                        css: "image_styles/overlay"
                    },
                    "image_full-overlay": {
                        match: ".image-full-overlay",
                        css: "image_styles/full-overlay"
                    },
                    "image_card-layout": {
                        match: ".image-card-layout",
                        css: "image_styles/card-layout"
                    },
                    image_zoom: {
                        selector: ".module-image .zoom",
                        css: "image_styles/zoom"
                    },
                    buttons_vertical: {
                        match: ".buttons-vertical",
                        css: "buttons_styles/vertical"
                    },
                    buttons_fullwidth: {
                        match: ".buttons-fullwidth",
                        css: "buttons_styles/fullwidth"
                    },
                    buttons_outline: {
                        match: ".module-buttons.outline",
                        css: "buttons_styles/outline"
                    },
                    "service-menu_horizontal": {
                        match: ".module-service-menu.image-horizontal",
                        css: "service-menu_styles/horizontal"
                    },
                    "service-menu_overlay": {
                        match: ".module-service-menu.image-overlay",
                        css: "service-menu_styles/overlay"
                    },
                    "service-menu_top": {
                        match: ".module-service-menu.image-top",
                        css: "service-menu_styles/top"
                    },
                    "service-menu_right": {
                        match: ".module-service-menu.image-right",
                        css: "service-menu_styles/right"
                    },
                    "service-menu_center": {
                        match: ".module-service-menu.image-center",
                        css: "service-menu_styles/center"
                    },
                    "service-menu_highlight": {
                        selector: ".module-service-menu .tb-highlight-text",
                        css: "service-menu_styles/highlight"
                    },
                    "service-menu_price": {
                        selector: ".module-service-menu .tb-menu-price",
                        css: "service-menu_styles/price"
                    }
                }), (h.is_parallax === m || !0 === this.isBpMobile && "m" === h.is_parallax) && (h.addons.p = {
                    match: "[data-parallax-bg]",
                    js: "parallax"
                }), h.fullwidth_support && (h.addons.fwr = {
                    match: ".fullwidth.module_row,.fullwidth_row_container",
                    js: "fullwidthRows"
                }), !u.is_builder_active) {
                h.addons.cl = {
                    selector: "[data-tb_link]",
                    js: "clickableComponent"
                }, this.initScrollHighlight(), this.toc();
                const e = l.querySelectorAll("[data-sticky-active]");
                e[0] !== m && (0 < i.scrollY ? this.stickyElementInit(e) : i.tfOn("scroll", () => {
                    this.stickyElementInit(e)
                }, {
                    passive: !0,
                    once: !0
                }))
            }
            u.trigger("themify_builder_loaded"), u.is_builder_loaded = !0
        },
        async wow(t, s) {
            if (t && "" !== h.is_animation && (!0 !== this.isBpMobile || "m" !== h.is_animation)) {
                let e;
                if (!0 === s)
                    if (t.hasAttribute("data-tf-animation") || t.classList.contains("hover-wow")) e = [t];
                    else {
                        if (!t.parentNode || !t.parentNode.hasAttribute("data-tf-animation") && !t.parentNode.classList.contains("hover-wow")) return;
                        e = [t.parentNode]
                    }
                else e = u.selectWithParent(".hover-wow,[data-tf-animation]", t);
                e[0] !== m && (await u.wow(), u.trigger("tf_wow_init", [e]))
            }
        },
        async initScrollHighlight(t, e) {
            if (!0 !== e && !0 !== u.is_builder_active && "external" !== h.scrollHighlight ? .scroll) {
                let e = t ? 0 < u.selectWithParent("[data-anchor]", t).length : null !== l.querySelector("[data-anchor]");
                if (!1 === e) {
                    const s = i.location.hash.replace("#", "");
                    "" !== s && "#" !== s && (e = null !== l.querySelector('[data-id="' + CSS.escape(s) + '"]'))
                }!0 === e && (await u.loadJs(u.builder_url + "js/themify.scroll-highlight"), u.trigger("tb_init_scroll_highlight", [t]))
            }
        },
        async toc() {
            const e = i.location.hash.replace("#", "");
            if ("" !== e)
                for (let e = l.tfClass("module-toc"), t = e.length - 1; - 1 < t; --t) this.addonLoad(e[t], null, !0)
        },
        async addonLoad(r, c, n) {
            if (h.addons && 0 < Object.keys(h.addons).length) {
                let e = {};
                if (c && r && r.tfClass("themify_builder")[0] === m) {
                    if (!h.addons[c]) return;
                    e[c] = h.addons[c]
                } else e = h.addons;
                const d = [];
                for (let o in e) {
                    let t = !1,
                        a = e[o];
                    if (a.selector !== m || a.match !== m)
                        if (!0 === n) t = a.match !== m ? r.matches(a.match) : r.matches(a.selector) || null !== r.querySelector(a.selector);
                        else {
                            let e = a.selector || a.match;
                            t = null !== l.querySelector(e.replaceAll(":scope>", ""))
                        }
                    else t = !0 === n ? r.classList.contains("module-" + o) : l.tfClass("module-" + o)[0] !== m;
                    if (!0 === t) {
                        let i = [],
                            s = "tb_" + o,
                            l = 1 === a ? null : a.ver;
                        if (a.css !== m && !u.cssLazy.has(s)) {
                            let t = a.css;
                            if (1 === t || "string" == typeof t) 1 !== t && t.includes("http") || (t = this.cssUrl + (1 === t ? o : a.css)), i.push(u.loadCss(t, s, l));
                            else
                                for (let e = a.css.length - 1; - 1 < e; --e) 1 !== (t = a.css[e]) && t.includes("http") || (t = this.cssUrl + (1 === t ? o : a.css[e])), i.push(u.loadCss(t, s + e, l))
                        }
                        if (a.js !== m) {
                            let e = r ? .classList,
                                t = a.js,
                                s = (e && (e.contains("module") || e.contains("active_module")) && e.add("tf_lazy"), 1 !== t && t.includes("http") || (t = this.jsUrl + (1 === t ? o : a.js)), i.push(u.loadJs(t, null, l)), Promise.all(i));
                            s.then(() => {
                                delete h.addons[o], e && (u.trigger("builder_load_module_partial", [r, n]), e.remove("tf_lazy"))
                            }), d.push(s)
                        } else delete h.addons[o];
                        if (c) break
                    }
                }
                await Promise.all(d), r || u.trigger("builder_load_module_partial", [r, n])
            }
        },
        loadModules(e, t) {
            const s = [];
            return s.push(this.touchdropdown(e, t)), !1 === u.is_builder_active && (s.push(this.morePagination(e, t)), !1 === t) && s.push(this.stickyElementInit(u.selectWithParent("[data-sticky-active]", e))), s.push(u.trigger("builder_load_module_partial", [e, t])), s.push(this.addonLoad(e, null, t)), s.push(this.wc(e, t)), s.push(this.wow(e, t)), s.push(this.initScrollHighlight(e, t)), Promise.all(s)
        },
        async wc(e, t) {
            if (!0 !== t && i.wc_single_product_params !== m) {
                const $ = jQuery;
                if ($(".wc-tabs-wrapper, .woocommerce-tabs, #rating", e).each(function() {
                        !this.hasAttribute("tb_done") && (this.dataset.tb_done = 1, "rating" !== this.id || this.parentNode.tfClass("stars")[0]) && $(this).trigger("init")
                    }), void 0 !== $.fn.wc_product_gallery) {
                    const s = i.wc_single_product_params;
                    $(".woocommerce-product-gallery", e).each(function() {
                        this.hasAttribute("tb_done") || ($(this).trigger("wc-product-gallery-before-init", [this, s]).wc_product_gallery(s).trigger("wc-product-gallery-after-init", [this, s])[0].dataset.tb_done = 1)
                    })
                }
            }
        },
        async touchdropdown(t, s) {
            if (u.isTouch) {
                let e = null;
                if (!0 === s) t.classList.contains("module-menu") && (e = [t.tfClass("nav")[0]]);
                else {
                    const i = t || l;
                    e = i.querySelectorAll(".module-menu .nav")
                }
                null !== e && e[0] !== m && (await u.loadCss(this.cssUrl + "menu_styles/sub_arrow"), u.dropDown(e))
            }
        },
        async stickyElementInit(e) {
            "" === h.is_sticky || !0 === this.isBpMobile && "m" === h.is_sticky || !e || e[0] === m || (await u.loadJs(this.jsUrl + "sticky"), u.trigger("tb_sticky_init", [e]))
        },
        async morePagination(e, t) {
            if (!0 !== t || e.classList.contains("tb_ajax_pagination")) {
                const s = u.selectWithParent("tb_ajax_pagination", e);
                if (s[0] !== m) {
                    const i = [];
                    for (let e = s.length - 1; - 1 < e; --e) i.push(u.infinity(s[e], {
                        id: '[data-id="' + s[e].dataset.id + '"]',
                        scrollThreshold: !1,
                        history: !0
                    }));
                    return Promise.all(i)
                }
            }
        }
    }, !0 === i.loaded ? ThemifyBuilderModuleJs.init() : i.tfOn("load", () => {
        ThemifyBuilderModuleJs.init()
    }, {
        once: !0,
        passive: !0
    })
})(window, Themify, document, void 0, tbLocalScript);