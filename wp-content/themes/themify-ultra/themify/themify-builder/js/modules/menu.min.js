(($, d, l) => {
    "use strict";
    const o = ThemifyBuilderModuleJs.cssUrl + "menu_styles/",
        s = l.createElement("div"),
        t = d.is_builder_active,
        n = () => d.loadCss(o + "mobile"),
        a = (e, t) => {
            e.closest("li").classList.toggle("tb_menu_open"), $(e).next().slideToggle()
        },
        i = () => {
            s.classList.remove("body-overlay-on"), l.body.classList.remove("menu-module-left", "menu-module-right");
            const e = $(".mobile-menu-module.visible").removeClass("left right");
            setTimeout(() => {
                e.removeClass("visible")
            }, 300)
        },
        m = (e, n, a) => {
            for (let l = n.length - 1; - 1 < l; --l) {
                let t = n[l],
                    e = parseInt(t.dataset.menuBreakpoint),
                    s = t.tfClass("nav")[0];
                if (t.tfClass("tb_mega_menu")[0] && (d.loadCss(o + "mega", "tb_menu_mega"), d.megaMenu(t)), t.classList.contains("dropdown") && d.loadCss(o + "dropdown", "tb_menu_dropdown"), s) {
                    s.classList.contains("transparent") && d.loadCss(o + "transparent", "tb_menu_transparent");
                    let e = s.classList.contains("fullwidth") ? "fullwidth" : s.classList.contains("vertical") ? "vertical" : "";
                    e && (d.loadCss(o + e, "tb_menu_" + e), "vertical" != e || t.tfClass("tf_acc_menu")[0] || d.loadCss(o + "accordion", "tb_menu_accordion"))
                }
                0 < e && t.classList.toggle("module-menu-mobile-active", a < e), void 0 === t.tfClass("tf_acc_menu")[0] && setTimeout(() => {
                    d.edgeMenu(t)
                }, 1500)
            }
            if (!t)
                if (!1 === e) {
                    let s = $(".menu-module-burger"),
                        e = s.parent().data("menu-breakpoint"),
                        t = s.parent().data("menu-style");
                    "mobile-menu-dropdown" === t && s.length && a < e && l.body.tfOn("click", e => {
                        const t = $(".module-menu-container");
                        !e.target.closest(".module-menu-container,.menu-module-burger") && t.is(":visible") && s.is(":visible") && (s.removeClass("is-open"), t.removeClass("is-open"))
                    })
                } else i()
        };
    if (d.on("builder_load_module_partial", (e, t) => {
            if (!0 !== t || e.classList.contains("module-menu")) {
                const s = d.selectWithParent("module-menu", e);
                m(!1, s, d.w)
            }
        }), !t) {
        const u = l.createElement("div"),
            r = l.createElement("link"),
            c = !0 === d.is_min ? ".min" : "";
        let e = o + "mobile" + c + ".css?ver=" + d.v;
        null !== d.urlArgs && (e += d.urlArgs), r.rel = "prefetch", r.setAttribute("as", "style"), r.href = e, u.className = "themify_builder", s.classList.add("body-overlay"), u.appendChild(s), l.body.append(u, r), d.body.on("click", ".menu-module-burger", function(e) {
            e.preventDefault(), n().then(() => {
                const a = $(this).parent(),
                    o = a.data("menu-style");
                if ("mobile-menu-dropdown" === o) $(this).toggleClass("is-open").siblings(".module-menu-container").toggleClass("is-open");
                else {
                    const i = a.data("menu-direction"),
                        m = a.data("element-id"),
                        e = u.dataset.id,
                        t = a[0].closest(".themify_builder_content").dataset.postid;
                    e && t === e || (e && u.classList.remove("themify_builder_content-" + e), u.dataset.id = t, u.className += " themify_builder_content-" + t);
                    let n = $('div[data-module="' + m + '"]', u);
                    if (!n.length) {
                        let e = a.data("gs"),
                            t = a.find('div[class*="-container"] > ul').clone(),
                            s = t.prop("class").replace(/nav|menu-bar|fullwidth|vertical|with-sub-arrow/g, ""),
                            l = a.prop("class").match(/menu-[\d\-]+/g);
                        e = e ? " " + e : "", l = l ? l[0] : "", (n = $("<div/>")).addClass("mobile-menu-module  " + s + " " + l + " " + m + " " + o + e + " module-menu").attr("data-module", m).attr("data-dir", i).appendTo(u), (t = t.removeAttr("id").removeAttr("class").addClass("nav")).find(".sub-menu").length && t.find(".sub-menu").prev("a").append('<i class="toggle-menu"></i>'), d.lazyScroll(t[0].querySelectorAll("[data-lazy]"), !0), n.html(t).prepend('<a class="menu-close" href="#"><span class="menu-close-inner tf_close"></span><span class="screen-reader-text">&times</span></a>')
                    }
                    l.body.classList.add("menu-module-" + i), n.addClass("visible"), setTimeout(() => {
                        n.addClass(i)
                    }, 50), s.classList.add("body-overlay-on")
                }
            })
        }).on("click", ".mobile-menu-module ul .toggle-menu", function(e) {
            e.preventDefault(), e.stopPropagation(), n().then(() => {
                a(this.closest("a"))
            })
        }).on("click", '.mobile-menu-module ul a[href="#"]', function(e) {
            e.preventDefault();
            const t = this.querySelector(".toggle-menu");
            null !== t && n().then(() => {
                a(this, t)
            })
        }).on("click", ".themify_builder .body-overlay,.mobile-menu-module .menu-close,.mobile-menu-module .menu-item a", e => {
            const t = e.target;
            t.classList.contains("toggle-menu") || "A" === t.tagName && "#" === t.getAttribute("href") || ((t.classList.contains("menu-close-inner") || t.parentNode.classList.contains("menu-close")) && e.preventDefault(), n().then(i))
        })
    }
    d.on("tfsmartresize", e => {
        e && m(!0, l.querySelectorAll(".module-menu.module"), e.w)
    })
})(jQuery, Themify, document);